[config]
default_to_workspace = false
skip_core_tasks = true
skip_git_env_info = true
skip_rust_env_info = true
skip_crate_env_info = true

[tasks.install-wasm-bindgen]
private = true
description = "Install the Wasm Bindgen CLI"
install_crate = { crate_name = "wasm-bindgen-cli", binary = "wasm-bindgen", test_arg = "--version" }

[tasks.add-wasm32-target]
private = true
command = "rustup"
description = "Adds the wasm32-unknown-unknown to rustup"
args = ["target", "add", "wasm32-unknown-unknown"]

[tasks.build-wasm]
private = true
command = "cargo"
description = "Builds a wasm32-unknown-unknown binary in release mode"
args = ["build", "--release", "--target", "wasm32-unknown-unknown"]

[tasks.wasm-bindgen-node]
private = true
command = "wasm-bindgen"
description = "Generates bindings for a previously built wasm32-unknown-unknown binary for the web target"
args = [
    "target/wasm32-unknown-unknown/release/getting_started_with_rust_wasm.wasm",
    "--target",
    "nodejs",
    "--out-dir",
    "pkg/",
]

[tasks.build-node]
description = "Runs all build steps for nodejs"
dependencies = [
    "add-wasm32-target",
    "install-wasm-bindgen",
    "build-wasm",
    "wasm-bindgen-node",
]

[tasks.run-node]
description = "Runs public/node/index.mjs"
script = """
node public/node/index.mjs
"""


[tasks.wasm-bindgen-bundler]
private = true
command = "wasm-bindgen"
description = "Generates bindings for a previously built wasm32-unknown-unknown binary for the bundler target"
args = [
    "target/wasm32-unknown-unknown/release/getting_started_with_rust_wasm.wasm",
    "--target",
    "bundler",
    "--out-dir",
    "pkg/",
]

[tasks.build-bundler]
description = "Runs all build steps for bundler"
dependencies = [
    "add-wasm32-target",
    "install-wasm-bindgen",
    "build-wasm",
    "wasm-bindgen-bundler",
]

[tasks.run-bundler]
description = "Runs public/bundler/index.js"
script = """
npm run build
npm run serve
"""
